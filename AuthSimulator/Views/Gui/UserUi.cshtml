<div id="appUser">
    <div v-if="panelIndex==0">
        <div v-if="users.length==0">
            <div class="alert alert-warning" role="alert">
                No User Defined. Add One
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-10">
                <div class="input-group mb-3" v-if="users.length>0">
                    <input id="searchtext_txt" type="text" class="form-control" v-model="searchtext" placeholder="Search Text" aria-label="User Search" aria-describedby="button-addon2">
                    <button class="btn btn-outline-secondary" type="button" v-on:click="reload()" id="button-addon2">Search</button>
                </div>
            </div>
            <div class="col-2 text-end">
                <button class="btn btn-primary" v-on:click.prevent="newUser()" type="button" id="button-addon2">New User</button>
            </div>
        </div>
        <div v-if="users.length>0" style="overflow-y:scroll;max-height:600px">
            <table class="table">
                <thead>
                    <tr>
                        <th>Email</th>
                        <th>Password</th>
                        <th>State</th>
                        <th>Actions</th>
                    </tr>
                </thead>

                <tr v-for="item in users">
                    <td>{{item.email}}</td>
                    <td>{{item.password}}</td>
                    <td>
                        <a v-if="item.active" href="#" title="User active. Click to change activation state." class="btn" v-on:click.prevent="changeState(item.id)">
                            <svg style="fill:green" xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24">
                                <path d="m424-296 282-282-56-56-226 226-114-114-56 56 170 170Zm56 216q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z" />
                            </svg>
                        </a>
                        <a v-if="!item.active" href="#" title="User not active. Click to change activation state." class="btn" v-on:click.prevent="changeState(item.id)">
                            <svg xmlns="http://www.w3.org/2000/svg" style="fill:red" height="24" viewBox="0 -960 960 960" width="24">
                                <path d="m336-280 144-144 144 144 56-56-144-144 144-144-56-56-144 144-144-144-56 56 144 144-144 144 56 56ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z" />
                            </svg>
                        </a>
                    </td>
                    <td>
                        <a href="#" title="edit current user" class="btn" v-on:click.prevent="openUser(item.id)">
                            <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24">
                                <path d="M200-200h56l345-345-56-56-345 345v56Zm572-403L602-771l56-56q23-23 56.5-23t56.5 23l56 56q23 23 24 55.5T829-660l-57 57Zm-58 59L290-120H120v-170l424-424 170 170Zm-141-29-28-28 56 56-28-28Z" />
                            </svg>
                        </a>
                        <a href="#" title="delete current user" v-on:click="select(item)" class="btn" data-bs-toggle="modal" data-bs-target="#deleteUserConfirm">
                            <svg xmlns="http://www.w3.org/2000/svg" style="fill:red" height="24" viewBox="0 -960 960 960" width="24">
                                <path d="M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z" />
                            </svg>
                        </a>
                    </td>
                </tr>

            </table>
        </div>
    </div>

    <div v-if="panelIndex==1">
        <form id="formuser" v-on:submit.prevent="submit">
            <h5 class="text-center">Information</h5>
            <div class="row">
                <label class="form-label fw-bold" for="user_mail">Email</label>
                <input id="user_mail" class="form-control" v-model="current.email" type="text" required />
            </div>

            <div class="row">
                <label class="form-label fw-bold" for="user_pwd">Password</label>
                <input id="user_pwd" class="form-control" v-model="current.password" type="text" required />
            </div>

            <div class="row mt-2">
                <h5 class="text-center">Claims</h5>
                <div v-if="claims.length==0">
                    <div class="alert alert-warning" role="alert">
                        No Claim Defined. Add One
                    </div>
                </div>
                <table v-if="claims.length>0" class="table" id="table_grant">
                    <thead>
                        <tr>
                            <th>Key</th>
                            <th>Value</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(item, index) in claims">
                            <td><input type="text" class="form-control" v-model="item.key" required /></td>
                            <td><input type="text" class="form-control" v-model="item.value" required /></td>
                            <td>

                                <a class="btn" v-if="index==0" title="order up">
                                    <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24" style="fill:gray">
                                        <path d="M440-320h80v-168l64 64 56-56-160-160-160 160 56 56 64-64v168Zm40 240q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z" />
                                    </svg>
                                </a>

                                <a class="btn" v-if="index>0" title="order up" v-on:click.prevent="moveup(index)">
                                    <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24">
                                        <path d="M440-320h80v-168l64 64 56-56-160-160-160 160 56 56 64-64v168Zm40 240q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z" />
                                    </svg>
                                </a>

                                <a class="btn" v-if="index>=claims.length-1" title="order down">
                                    <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24" style="fill:gray">
                                        <path d="m480-320 160-160-56-56-64 64v-168h-80v168l-64-64-56 56 160 160Zm0 240q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z" />
                                    </svg>
                                </a>

                                <a class="btn" v-on:click.prevent="movedown(index)" v-if="index<claims.length-1" title="order down">
                                    <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24">
                                        <path d="m480-320 160-160-56-56-64 64v-168h-80v168l-64-64-56 56 160 160Zm0 240q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z" />
                                    </svg>
                                </a>

                                <a class="btn" v-on:click.prevent="deleteclaim(index)" title="delete claim">
                                    <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24" style="fill:red">
                                        <path d="M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z" />
                                    </svg>
                                </a>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="mt-3 row justify-content-md-center">
                    <div class="col-4">
                        <div class="input-group">
                            <select class="form-select" v-model="claimtype">
                                <option value="1">Single Item</option>
                                <option value="2">Facebook Claims</option>
                                <option value="6">Github Claims</option>
                                <option value="3">Google Claims</option>
                                <option value="5">Linkedin Claims</option>
                                <option value="4">Microsoft Claims</option>
                            </select>
                            <button class="btn btn-primary" type="button" v-on:click.prevent="addclaim()" id="button-addon2">Add</button>
                        </div>
                    </div>
                </div>
            </div>

            <div>
                <input type="submit" class="btn btn-lg btn-primary" value="Save" />
                <button class="btn btn-lg btn-primary ms-3" v-on:click="back()">Back</button>
            </div>
        </form>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="deleteUserConfirm" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Delete User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete current user?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Delete</button>
            </div>
        </div>
    </div>
</div>

<script>


    createApp({
        methods: {
            newUser() {
                let c = this;
                c.current = { id: 0, email: "", password: "", jsonData: "{}" };
                c.claims = [];
                c.panelIndex = 1;
            },
            openUser(id) {
                let c = this;
                $.get("/user/" + id, function (data) {
                    c.current = data;
                    let o = JSON.parse(data.jsonData);

                    let claims = [];
                    let jsonizer = (o, s) => {
                        for (let x in o) {
                            if (typeof o[x] === "object") {
                                jsonizer(o[x], x + "__");
                            } else {
                                claims.push({ key: s + x, value: o[x] });
                            }
                        }
                    };
                    jsonizer(o, "");

                    c.claims = claims;
                });

                c.panelIndex = 1;
            },
            select(item) {
                current = item;
            },
            moveup(index) {
                let c = this.claims[index];
                this.claims[index] = this.claims[index - 1];
                this.claims[index - 1] = c;
            },
            movedown(index) {
                let c = this.claims[index];
                this.claims[index] = this.claims[index + 1];
                this.claims[index + 1] = c;
            },
            deleteUser() {
                let c = this;
                $.ajax({
                    method: "DELETE",
                    url: "/user/" + current.id,
                    contentType: "application/json; charset=utf-8"
                }).done(function (msg) {
                    showSuccess();
                    c.reload();
                }).fail(function (data) {
                    showError();
                });;
            },
            addclaim() {
                switch (this.claimtype) {
                    case "1":
                        this.claims.push({ key: "", value: "" });
                        break;
                    case "2":
                        this.setclaims("facebook");
                        break;
                    case "3":
                        this.setclaims("google");
                        break;
                    case "4":
                        this.setclaims("microsoft");
                        break;
                    case "5":
                        this.setclaims("linkedin");
                        break;
                    case "6":
                        this.setclaims("github");
                        break;
                }

            },
            deleteclaim(index) {
                this.claims.splice(index, 1);
            },
            back() {
                this.panelIndex = 0;
            },
            reload() {
                let c = this;
                $.get("/user/search?text=" + c.searchtext, function (data) {
                    c.users = data;
                });
            },
            changeState(id) {
                let c = this;
                $.ajax({
                    method: "PUT",
                    url: "/user/activation/" + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify({})
                }).done(function (msg) {
                    showSuccess();
                    c.reload();
                }).fail(function (data) {
                    showError();
                });;
            },
            submit() {

                let c = this;
                let o = {};

                //order by

                for (let i = 0; i < c.claims.length; i++) {

                    let parts = c.claims[i].key.split("__");
                    let current = o;
                    for (let k = 0; k < parts.length - 1; k++) {
                        if (!current[parts[k]])
                            current[parts[k]] = {};
                        current = current[parts[k]];
                    }

                    current[parts[parts.length - 1]] = c.claims[i].value;
                }

                c.current.jsonData = JSON.stringify(o);
                let method = "";
                let url = "";

                if (c.current.id > 0) {
                    method = "PUT";
                    url = "/user/" + c.current.id;
                } else {
                    method = "POST";
                    url = "/user";
                }

                $.ajax({
                    method: method,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify(c.current)
                }).done(function (msg) {
                    showSuccess();
                    c.panelIndex = 0;
                    c.reload();

                }).fail(function (data) {
                    showError();
                });
            },
            setclaims(vendor) {
                let userInfo = {};
                let c = this;
                switch (vendor) {
                    case "microsoft":
                        userInfo = {
                            displayName: "John Doe",
                            givenName: "John",
                            mail: "johndoe@test.com",
                            surname: "Doe",
                            id: "12345"
                        }
                        break;
                    case "google":
                        {
                            userInfo = {
                                email: "johndoe@test.com",
                                family_name: "Doe",
                                given_name: "John",
                                id: "12345",
                                link: "http://test.com/profile/12345",
                                name: "John Doe",
                                verified_email: "true"
                            }
                        }
                        break;
                    case "facebook":
                        userInfo = {
                            id: "12345",
                            age_range: "{min:1,max:10}",
                            birthday: "17/01/1980",
                            email: "johndoe@test.com",
                            name: "John Doe",
                            first_name: "John",
                            middle_name: "J",
                            last_name: "Doe",
                            gender: "male",
                            link: "http://page/profile/12345",
                            location: "New York",
                            locale: "en-Us",
                            timezone: "GMT-4"
                        }
                        break;
                    case "linkedin":
                        userInfo = {
                            firstName__localized__en_US: "John",
                            firstName__preferredLocale__country: "US",
                            firstName__preferredLocale__language: "en",
                            localizedFirstName: "Bob",
                            headline__localized__en_US: "Api for Linkedin",
                            headline__preferredLocale__country: "US",
                            headline__preferredLocale__language: "en",
                            localizedHeadline: "API Enthusiast at LinkedIn",
                            vanityName: "bsmith",
                            id: "yrZCpj2Z12",
                            lastName__localized__en_US: "Doe",
                            lastName__preferredLocale__country: "US",
                            lastName__preferredLocale__language: "en",
                            localizedLastName: "Doe",
                            profilePicture__displayImage: "urn:li:digitalmediaAsset:C4D00AAAAbBCDEFGhiJ"

                        };
                        break;
                    case "github":
                        userInfo = {
                            login: "johndoe",
                            id: 1,
                            node_id: "MDQ6VXNlcjE=",
                            avatar_url: "https://github.com/images/error/octocat_happy.gif",
                            gravatar_id: "",
                            url: "https://api.github.com/users/octocat",
                            html_url: "https://github.com/octocat",
                            followers_url: "https://api.github.com/users/octocat/followers",
                            following_url: "https://api.github.com/users/octocat/following{/other_user}",
                            gists_url: "https://api.github.com/users/octocat/gists{/gist_id}",
                            starred_url: "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            subscriptions_url: "https://api.github.com/users/octocat/subscriptions",
                            organizations_url: "https://api.github.com/users/octocat/orgs",
                            repos_url: "https://api.github.com/users/octocat/repos",
                            events_url: "https://api.github.com/users/octocat/events{/privacy}",
                            received_events_url: "https://api.github.com/users/octocat/received_events",
                            type: "User",
                            site_admin: false,
                            name: "John Doe",
                            company: "GitHub",
                            blog: "https://github.com/blog",
                            location: "New York",
                            email: "johndoe@test.com",
                            hireable: false,
                            bio: "There once was...",
                            twitter_username: "johndoe",
                            public_repos: 2,
                            public_gists: 1,
                            followers: 20,
                            following: 0,
                            created_at: "2008-01-14T04:33:35Z",
                            updated_at: "2008-01-14T04:33:35Z",
                            private_gists: 81,
                            total_private_repos: 100,
                            owned_private_repos: 100,
                            disk_usage: 10000,
                            collaborators: 8,
                            two_factor_authentication: true,
                            plan__name: "Medium",
                            plan__space: 400,
                            plan__private_repos: 20,
                            plan__collaborators: 0
                        };
                        break;
                }

                let claims = [];
                for (let x in userInfo) {
                    claims.push({ key: x, value: userInfo[x] });
                }
                c.claims = claims;
            }
        },
        mounted() {
            let c = this;
            $("#deleteUserConfirm .btn-primary").click(function () { c.deleteUser(); });
            $.get("/user/search?text=", function (data) {
                c.users = data;
            });
        },
        data() {
            return {
                panelIndex: 0,
                current: {},
                claims: [],
                users: [],
                searchtext: "",
                claimtype: "1"
            }
        }
    }).mount('#appUser')
</script>